/*!
 * oneui - v5.2.0
 * @author pixelcave - https://pixelcave.com
 * Copyright (c) 2022
 */
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./public/assets/_js/pages/be_pages_dashboard.js":
/*!*******************************************************!*\
  !*** ./public/assets/_js/pages/be_pages_dashboard.js ***!
  \*******************************************************/
/***/ (function() {

eval("/*\r\n *  Document   : be_pages_dashboard.js\r\n *  Author     : pixelcave\r\n *  Description: Custom JS code used in Dashboard Page\r\n */\n// Chart.js Charts, for more examples you can check out http://www.chartjs.org/docs\nclass pageDashboard {\n  /*\r\n   * Init Charts\r\n   *\r\n   */\n  static initCharts() {\n    // Set Global Chart.js configuration\n    Chart.defaults.color = '#818d96';\n    Chart.defaults.scale.grid.lineWidth = 0;\n    Chart.defaults.scale.beginAtZero = true;\n    Chart.defaults.datasets.bar.maxBarThickness = 45;\n    Chart.defaults.elements.bar.borderRadius = 4;\n    Chart.defaults.elements.bar.borderSkipped = false;\n    Chart.defaults.elements.point.radius = 0;\n    Chart.defaults.elements.point.hoverRadius = 0;\n    Chart.defaults.plugins.tooltip.radius = 3;\n    Chart.defaults.plugins.legend.labels.boxWidth = 10; // Get Chart Containers\n\n    let chartEarningsCon = document.getElementById('js-chartjs-earnings');\n    let chartTotalOrdersCon = document.getElementById('js-chartjs-total-orders');\n    let chartTotalEarningsCon = document.getElementById('js-chartjs-total-earnings');\n    let chartNewCustomersCon = document.getElementById('js-chartjs-new-customers'); // Set Chart and Chart Data variables\n\n    let chartEarnings, chartTotalOrders, chartTotalEarnings, chartNewCustomers; // Init Chart Earnings\n\n    if (chartEarningsCon !== null) {\n      chartEarnings = new Chart(chartEarningsCon, {\n        type: 'bar',\n        data: {\n          labels: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],\n          datasets: [{\n            label: 'This Week',\n            fill: true,\n            backgroundColor: 'rgba(100, 116, 139, .7)',\n            borderColor: 'transparent',\n            pointBackgroundColor: 'rgba(100, 116, 139, 1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(100, 116, 139, 1)',\n            data: [716, 628, 1056, 560, 956, 890, 790]\n          }, {\n            label: 'Last Week',\n            fill: true,\n            backgroundColor: 'rgba(100, 116, 139, .15)',\n            borderColor: 'transparent',\n            pointBackgroundColor: 'rgba(100, 116, 139, 1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(100, 116, 139, 1)',\n            data: [1160, 923, 1052, 1300, 880, 926, 963]\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              display: false,\n              grid: {\n                drawBorder: false\n              }\n            },\n            y: {\n              display: false,\n              grid: {\n                drawBorder: false\n              }\n            }\n          },\n          interaction: {\n            intersect: false\n          },\n          plugins: {\n            legend: {\n              labels: {\n                boxHeight: 10,\n                font: {\n                  size: 14\n                }\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  return context.dataset.label + ': $' + context.parsed.y;\n                }\n              }\n            }\n          }\n        }\n      });\n    } // Init Chart Total Orders\n\n\n    if (chartTotalOrdersCon !== null) {\n      chartTotalOrders = new Chart(chartTotalOrdersCon, {\n        type: 'line',\n        data: {\n          labels: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],\n          datasets: [{\n            label: 'Total Orders',\n            fill: true,\n            backgroundColor: 'rgba(220, 38, 38, .15)',\n            borderColor: 'transparent',\n            pointBackgroundColor: 'rgba(220, 38, 38, 1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(220, 38, 38, 1)',\n            data: [33, 29, 32, 37, 38, 30, 34, 28, 43, 45, 26, 45, 49, 39]\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          tension: .4,\n          scales: {\n            x: {\n              display: false\n            },\n            y: {\n              display: false\n            }\n          },\n          interaction: {\n            intersect: false\n          },\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  return ' ' + context.parsed.y + ' Orders';\n                }\n              }\n            }\n          }\n        }\n      });\n    } // Init Chart Total Earnings\n\n\n    if (chartTotalEarningsCon !== null) {\n      chartTotalEarnings = new Chart(chartTotalEarningsCon, {\n        type: 'line',\n        data: {\n          labels: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],\n          datasets: [{\n            label: 'Total Earnings',\n            fill: true,\n            backgroundColor: 'rgba(101, 163, 13, .15)',\n            borderColor: 'transparent',\n            pointBackgroundColor: 'rgba(101, 163, 13, 1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(101, 163, 13, 1)',\n            data: [716, 1185, 750, 1365, 956, 890, 1200, 968, 1158, 1025, 920, 1190, 720, 1352]\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          tension: .4,\n          scales: {\n            x: {\n              display: false\n            },\n            y: {\n              display: false\n            }\n          },\n          interaction: {\n            intersect: false\n          },\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  return ' $' + context.parsed.y;\n                }\n              }\n            }\n          }\n        }\n      });\n    } // Init Chart New Customers\n\n\n    if (chartNewCustomersCon !== null) {\n      chartNewCustomers = new Chart(chartNewCustomersCon, {\n        type: 'line',\n        data: {\n          labels: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],\n          datasets: [{\n            label: 'Total Orders',\n            fill: true,\n            backgroundColor: 'rgba(101, 163, 13, .15)',\n            borderColor: 'transparent',\n            pointBackgroundColor: 'rgba(101, 163, 13, 1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(101, 163, 13, 1)',\n            data: [25, 15, 36, 14, 29, 19, 36, 41, 28, 26, 29, 33, 23, 41]\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          tension: .4,\n          scales: {\n            x: {\n              display: false\n            },\n            y: {\n              display: false\n            }\n          },\n          interaction: {\n            intersect: false\n          },\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  return ' ' + context.parsed.y + ' Customers';\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  }\n  /*\r\n   * Init functionality\r\n   *\r\n   */\n\n\n  static init() {\n    this.initCharts();\n  }\n\n} // Initialize when page loads\n\n\nOne.onLoad(pageDashboard.init());\n\n//# sourceURL=webpack://oneui/./public/assets/_js/pages/be_pages_dashboard.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./public/assets/_js/pages/be_pages_dashboard.js"]();
/******/ 	
/******/ })()
;